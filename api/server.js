// Generated by CoffeeScript 1.8.0
(function() {
  var allMatch, getKey, getMessage, http, routes, saveKey, saveMessage, server, storage, _url;

  http = require('http');

  _url = require('url');

  storage = require('./storage');

  saveMessage = function(_, req, res) {
    return JSON.stringify({
      type: 'set_message'
    });
  };

  saveKey = function(_, req, res) {
    return JSON.stringify({
      type: 'set_key'
    });
  };

  getMessage = function(m, req, res) {
    return JSON.stringify({
      id: m[1],
      type: 'get_message'
    });
  };

  getKey = function(m, req, res) {
    return JSON.stringify({
      id: m[1],
      type: 'get_key'
    });
  };

  routes = ["POST", "/m", saveMessage, "POST", "/k", saveKey, "GET", /\/m\/(.+)$/, getMessage, "GET", /\/k\/(.+)$/, getKey];

  allMatch = function(a, b) {
    if (typeof b === "string") {
      return a === b;
    } else {
      return b.exec(a);
    }
  };

  server = http.createServer(function(req, res) {
    var action, content, match, method, path, pos, url;
    content = null;
    url = _url.parse(req.url, true);
    pos = 0;
    while (pos < routes.length) {
      method = routes[pos + 0];
      path = routes[pos + 1];
      action = routes[pos + 2];
      match = null;
      if (req.method === method && (match = allMatch(url.pathname, path))) {
        content = action(match, url, res);
        break;
      }
      pos += 3;
    }
    if (content) {
      res.statusCode = 200;
      res.setHeader("Content-Type", "application/json");
    } else {
      res.statusCode = 404;
      res.setHeader("Content-Type", "text/plain");
      content = "File not found\n";
    }
    res.setHeader("Content-Length", (content != null ? content.length : void 0) || 0);
    return res.end(content);
  });

  server.listen(5000);

}).call(this);
